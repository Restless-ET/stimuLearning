<?php

/**
 * Scenario
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    stimuLearning
 * @subpackage model
 * @author     Artur Melo <adsmelo@ua.pt>
 */
class Scenario extends BaseScenario
{
    /**
     * Takes the necessary steps to initialize all data regarding the simulation starting point (time=0)
     *
     * @return true on success, error message otherwise
     */
    public function initializeSimulation()
    {
        $msg = true;
        // validate that this scenario has operators
        if (!count($this->Operators)) {
            $msg = 'This scenario has no associated operators!';
        }

        // validate that services exists for all operators
        foreach ($this->Operators as $operator) {
            if (!count($operator->Services)) {
                $msg = 'One or more of the Operators does not have any Service registered yet!';
                break;
            }

            $clients = $operator['starting_market_size'];

            foreach ($operator['Services'] as $service) {
                $tech = $service['Technology'];
                if ($tech['first_tick_available'] >= $this['current_tick']) {
                    $equipDetails = array();
                    $equipments = Doctrine_Core::getTable('Equipment')->createQuery('e')
                                      ->where('e.architecture_id = ?', $tech['Architecture']['id'])
                                      ->orderBy('e.network_level ASC')
                                      ->fetchArray();
                    foreach ($equipments as $equipment) {
                        $equipDetails[$equipment['network_level']] = $equipment['number_of_ports'];
                    }
                }
            }

            //TODO Calculate the initial equipments that are necessary and acquire them.

            //TODO Create the initial tick (Equipments price is for CAPEX; costs_per_user for OPEX; setup_fee???)

            $operator->setCurrentMarketSize($clients);
            $operator->save();
        }

        //TODO Init a market tick

        if ($msg === true) {
            // Change scenario to started
            $this->setStarted(true);
            $this->save();
        }

        return $msg;
    }

    /**
     * Advances the scenario simulation to the next step.
     *
     * @return void
     */
    public function advanceToNextStep()
    {
        foreach ($this->Operators as $operator) {

            $newClients = rand(9876, 12345);
            //TODO Determine the how many clients have arrived/left for the operator

            //TODO Calculate the necessary equipments and acquire them.

            //TODO Create the ticks (Equipments price is for CAPEX; costs_per_user for OPEX)

            $operator->current_market_size += $newClients;
            $operator->save();
        }

        //TODO A new market tick??

        $this->current_tick += 1;
        if ($this->current_tick == $this->lifespan) {
            $this->finished = true;
        }
        $this->save();
    }
}
