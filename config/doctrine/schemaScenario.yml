Scenario:
  actAs:
    Timestampable: ~
  columns:
    description: { type: string(100), notnull: true }
    started: { type: boolean, default: false }
    finished: { type: boolean, default: false }
    total_clients: { type: integer, notnull: true } # auto-generated
    tick_alias:
      type: enum
      values:
        - ~
        - Week
        - Month
        - Year
      notnull: true
    current_tick: { type: integer, notnull: true, default: 0 } # hidden
    lifespan: { type: integer, notnull: true }
    total_decision_points: { type: integer, notnull: true }
    ticks_between_decision_points: { type: integer, notnull: true } # readonly
  ## Market Share Evolution Parameters ##
    starting_level: { type: decimal, notnull: true }
    saturation_level: { type: decimal, notnull: true }
    alpha: { type: integer, notnull: true }
    beta: { type: float, notnull: true }
  ## Geography / Territory ##
    total_area: { type: decimal, notnull: true, default: 500 }
    dense_urban_territory: { type: decimal, notnull: true, default: 25 }
    dense_urban_area: { type: decimal, notnull: true, default: 125 } # readonly
    urban_territory: { type: decimal, notnull: true, default: 25 }
    urban_area: { type: decimal, notnull: true, default: 125 } # readonly
    suburban_territory: { type: decimal, notnull: true, default: 25 }
    suburban_area: { type: decimal, notnull: true, default: 125 } # readonly
    rural_territory: { type: decimal, notnull: true, default: 25 }
    rural_area: { type: decimal, notnull: true, default: 125 } # readonly
  ## Demography / Population ##
    dense_urban_distribution: { type: decimal, notnull: true, default: 25 }
    dense_urban_population: { type: integer, notnull: true } # readonly
    urban_distribution: { type: decimal, notnull: true, default: 25 }
    urban_population: { type: integer, notnull: true } # readonly
    suburban_distribution: { type: decimal, notnull: true, default: 25 }
    suburban_population: { type: integer, notnull: true } # readonly
    rural_distribution: { type: decimal, notnull: true, default: 25 }
    rural_population: { type: integer, notnull: true } # readonly
  ## Financial Parameters ##
    packages_erosion_rate: { type: decimal, notnull: true }
    depreciation_rate: { type: decimal, notnull: true }
    interest_rate: { type: decimal, notnull: true }
    elasticity: { type: decimal, notnull: true }
    bankrupcy_limit: { type: decimal, notnull: true }
  ## Quality Vector Weights ##
    number_of_services_weight: { type: decimal, notnull: true, default: 10 }
    download_weight: { type: decimal, notnull: true, default: 10 }
    upload_weight: { type: decimal, notnull: true, default: 10 }
    rate_weight: { type: decimal, notnull: true, default: 10 }
    fee_weight: { type: decimal, notnull: true, default: 10 }
    occupation_rate_weight: { type: decimal, notnull: true, default: 10 }
    containment_factor_weight: { type: decimal, notnull: true, default: 10 }
    reference_occupation_rate: { type: decimal, notnull: true, default: 10 }

    responsible_id: { type: integer } #, notnull: true }
  ## Relations ##
  relations:
    Responsible:
      class: User
      local: responsible_id
      foreign: id
      foreignAlias: Scenarios
    Technologies:
      type: many
      class: Technology
      orderBy: first_tick_available ASC
      onDelete: CASCADE
      local: id
      foreign: scenario_id
    Architectures:
      type: many
      class: Architecture
      onDelete: CASCADE
      local: id
      foreign: scenario_id
    Equipments:
      type: many
      class: Equipment
      onDelete: CASCADE
      local: id
      foreign: scenario_id
